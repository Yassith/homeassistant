# Liczniki do MQTT
# sensor totalforwardenergy - energia pobrana z sieci
- platform: template
  sensors:
    licznik1_licznik_mqtt_zuzycie_dzis:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie dziś licznik1 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_dnia = states.sensor.licznik1_licznik_koniec_dnia_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalforwardactiveenergy.state| float %}
        {{ (aktualny - koniec_dnia )|round(2) }}

    licznik1_licznik_mqtt_zuzycie_dzis_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie dziś licznik1 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik1_licznik_mqtt_zuzycie_dzis.state |float )) | round(2) }}

    licznik1_licznik_mqtt_zuzycie_mc:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie mc licznik1 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_mca = states.sensor.licznik1_licznik_koniec_mca_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalforwardactiveenergy.state| float %}
        {{ (aktualny - koniec_mca )|round(0) }}
    licznik1_licznik_mqtt_zuzycie_mc_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie mc licznik1 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik1_licznik_mqtt_zuzycie_mc.state |float )) | round(2) }}

    licznik1_licznik_mqtt_zuzycie_rok:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie rok licznik1 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_roku = states.sensor.licznik1_licznik_koniec_roku_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalforwardactiveenergy.state| float %}
        {{ (aktualny - koniec_roku )|round(0) }}
    licznik1_licznik_mqtt_zuzycie_rok_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie rok licznik1 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik1_licznik_mqtt_zuzycie_rok.state |float )) | round(2) }}
# sensor totalreverseenergy - energia oddana do sieci
- platform: template
  sensors:
    licznik2_licznik_mqtt_zuzycie_dzis:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie dziś licznik2 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_dnia = states.sensor.licznik2_licznik_koniec_dnia_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalreverseactiveenergy.state| float %}
        {{ (aktualny - koniec_dnia )|round(2) }}

    licznik2_licznik_mqtt_zuzycie_dzis_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie dziś licznik2 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik2_licznik_mqtt_zuzycie_dzis.state |float )) | round(2) }}

    licznik2_licznik_mqtt_zuzycie_mc:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie mc licznik2 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_mca = states.sensor.licznik2_licznik_koniec_mca_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalreverseactiveenergy.state| float %}
        {{ (aktualny - koniec_mca )|round(0) }}
    licznik2_licznik_mqtt_zuzycie_mc_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie mc licznik2 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik2_licznik_mqtt_zuzycie_mc.state |float )) | round(2) }}

    licznik2_licznik_mqtt_zuzycie_rok:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie rok licznik2 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_roku = states.sensor.licznik2_licznik_koniec_roku_stan.state|float %}
        {% set aktualny = states.sensor.licznik_faza123_totalreverseactiveenergy.state| float %}
        {{ (aktualny - koniec_roku )|round(0) }}
    licznik2_licznik_mqtt_zuzycie_rok_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie rok licznik2 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik2_licznik_mqtt_zuzycie_rok.state |float )) | round(2) }}
# sensor solar_total_production - energia wygenerowana przez PV
- platform: template
  sensors:
    licznik3_licznik_mqtt_zuzycie_dzis:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie dziś licznik3 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_dnia = states.sensor.licznik3_licznik_koniec_dnia_stan.state|float %}
        {% set aktualny = states.sensor.solar_total_production.state| float %}
        {{ (aktualny - koniec_dnia )|round(2) }}

    licznik3_licznik_mqtt_zuzycie_dzis_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie dziś licznik3 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik3_licznik_mqtt_zuzycie_dzis.state |float )) | round(2) }}

    licznik3_licznik_mqtt_zuzycie_mc:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie mc licznik3 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_mca = states.sensor.licznik3_licznik_koniec_mca_stan.state|float %}
        {% set aktualny = states.sensor.solar_total_production.state| float %}
        {{ (aktualny - koniec_mca )|round(0) }}
    licznik3_licznik_mqtt_zuzycie_mc_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie mc licznik3 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik3_licznik_mqtt_zuzycie_mc.state |float )) | round(2) }}

    licznik3_licznik_mqtt_zuzycie_rok:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie rok licznik3 MQTT"
      device_class: power
      value_template: >-
        {% set koniec_roku = states.sensor.licznik3_licznik_koniec_roku_stan.state|float %}
        {% set aktualny = states.sensor.solar_total_production.state| float %}
        {{ (aktualny - koniec_roku )|round(0) }}
    licznik3_licznik_mqtt_zuzycie_rok_pln:
      unit_of_measurement: "PLN"
      friendly_name: "Zużycie rok licznik3 MQTT PLN"
      value_template: >-
        {{ ((states.sensor.licznik_mew.attributes.pricePerUnit | float ) * ( states.sensor.licznik3_licznik_mqtt_zuzycie_rok.state |float )) | round(2) }}
# energia zuzyta przez DOM
- platform: template
  sensors:
    licznik4_licznik_mqtt_zuzycie_dzis:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie dzis DOM licznik4 MQTT"
      device_class: power
      value_template: >-
        {% set produkcja_koniec_dnia = states.sensor.licznik3_licznik_mqtt_zuzycie_dzis.state|float %}
        {% set pobrana_dzis = states.sensor.licznik1_licznik_mqtt_zuzycie_dzis.state| float %}
        {% set oddana_dzis = states.sensor.licznik2_licznik_mqtt_zuzycie_dzis.state| float %}
        {{ (produkcja_koniec_dnia + pobrana_dzis - oddana_dzis )|round(2) }}

    licznik4_licznik_mqtt_zuzycie_mc:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie miesiac DOM licznik4 MQTT"
      device_class: power
      value_template: >-
        {% set produkcja_koniec_mc = states.sensor.licznik3_licznik_mqtt_zuzycie_mc.state|float %}
        {% set pobrana_mc = states.sensor.licznik1_licznik_mqtt_zuzycie_mc.state| float %}
        {% set oddana_mc = states.sensor.licznik2_licznik_mqtt_zuzycie_mc.state| float %}
        {{ (produkcja_koniec_mc + pobrana_mc - oddana_mc )|round(0) }}

    licznik4_licznik_mqtt_zuzycie_rok:
      unit_of_measurement: "kWh"
      friendly_name: "Zużycie rok DOM licznik4 MQTT"
      device_class: power
      value_template: >-
        {% set produkcja_koniec_rok = states.sensor.licznik3_licznik_mqtt_zuzycie_rok.state|float %}
        {% set pobrana_rok = states.sensor.licznik1_licznik_mqtt_zuzycie_rok.state| float %}
        {% set oddana_rok = states.sensor.licznik2_licznik_mqtt_zuzycie_rok.state| float %}
        {{ (produkcja_koniec_rok + pobrana_rok - oddana_rok )|round(0) }}
